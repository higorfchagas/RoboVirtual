// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoRoboNddTech.Data;

namespace ProjetoRoboNddTech.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210331135152_RemocaoMovimentoAnterior")]
    partial class RemocaoMovimentoAnterior
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ProjetoRoboNddTech.Models.BracoCotoveloMovimento", b =>
                {
                    b.Property<int>("BracoCotoveloMovimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BracoCotoveloMovimentoDescricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BracoCotoveloMovimentoId");

                    b.ToTable("BracoCotoveloMovimento");
                });

            modelBuilder.Entity("ProjetoRoboNddTech.Models.BracoPulsoMovimento", b =>
                {
                    b.Property<int>("BracoPulsoMovimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BracoPulsoMovimentoDescricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BracoPulsoMovimentoId");

                    b.ToTable("BracoPulsoMovimento");
                });

            modelBuilder.Entity("ProjetoRoboNddTech.Models.CabecaInclinacaoMovimento", b =>
                {
                    b.Property<int>("CabecaInclinacaoMovimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CabecaInclinacaoMovimentoDescricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabecaInclinacaoMovimentoId");

                    b.ToTable("CabecaInclinacaoMovimento");
                });

            modelBuilder.Entity("ProjetoRoboNddTech.Models.CabecaRotacaoMovimento", b =>
                {
                    b.Property<int>("CabecaRotacaoMovimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CabecaRotacaoMovimentoDescricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabecaRotacaoMovimentoId");

                    b.ToTable("CabecaRotacaoMovimento");
                });

            modelBuilder.Entity("ProjetoRoboNddTech.Models.Robo", b =>
                {
                    b.Property<int>("RoboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("movimentoBracoCotoveloDireitoId")
                        .HasColumnType("int");

                    b.Property<int?>("movimentoBracoCotoveloEsquerdoId")
                        .HasColumnType("int");

                    b.Property<int?>("movimentoBracoPulsoDireitoId")
                        .HasColumnType("int");

                    b.Property<int?>("movimentoBracoPulsoEsquerdoId")
                        .HasColumnType("int");

                    b.Property<int?>("movimentoCabecaInclinacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("movimentoCabecaRotacaoId")
                        .HasColumnType("int");

                    b.HasKey("RoboId");

                    b.HasIndex("movimentoBracoCotoveloDireitoId");

                    b.HasIndex("movimentoBracoCotoveloEsquerdoId");

                    b.HasIndex("movimentoBracoPulsoDireitoId");

                    b.HasIndex("movimentoBracoPulsoEsquerdoId");

                    b.HasIndex("movimentoCabecaInclinacaoId");

                    b.HasIndex("movimentoCabecaRotacaoId");

                    b.ToTable("Robo");
                });

            modelBuilder.Entity("ProjetoRoboNddTech.Models.Robo", b =>
                {
                    b.HasOne("ProjetoRoboNddTech.Models.BracoCotoveloMovimento", "MovimentoBracoCotoveloDireito")
                        .WithMany()
                        .HasForeignKey("movimentoBracoCotoveloDireitoId");

                    b.HasOne("ProjetoRoboNddTech.Models.BracoCotoveloMovimento", "MovimentoBracoCotoveloEsquerdo")
                        .WithMany()
                        .HasForeignKey("movimentoBracoCotoveloEsquerdoId");

                    b.HasOne("ProjetoRoboNddTech.Models.BracoPulsoMovimento", "MovimentoBracoPulsoDireito")
                        .WithMany()
                        .HasForeignKey("movimentoBracoPulsoDireitoId");

                    b.HasOne("ProjetoRoboNddTech.Models.BracoPulsoMovimento", "MovimentoBracoPulsoEsquerdo")
                        .WithMany()
                        .HasForeignKey("movimentoBracoPulsoEsquerdoId");

                    b.HasOne("ProjetoRoboNddTech.Models.CabecaRotacaoMovimento", "MovimentoCabecaInclinacao")
                        .WithMany()
                        .HasForeignKey("movimentoCabecaInclinacaoId");

                    b.HasOne("ProjetoRoboNddTech.Models.CabecaRotacaoMovimento", "MovimentoCabecaRotacao")
                        .WithMany()
                        .HasForeignKey("movimentoCabecaRotacaoId");

                    b.Navigation("MovimentoBracoCotoveloDireito");

                    b.Navigation("MovimentoBracoCotoveloEsquerdo");

                    b.Navigation("MovimentoBracoPulsoDireito");

                    b.Navigation("MovimentoBracoPulsoEsquerdo");

                    b.Navigation("MovimentoCabecaInclinacao");

                    b.Navigation("MovimentoCabecaRotacao");
                });
#pragma warning restore 612, 618
        }
    }
}
